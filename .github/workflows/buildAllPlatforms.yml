name: Build All Release Platforms

on: 
  workflow_dispatch:
    inputs:
      buildName:
        description: 'Name Of Executable. Should not contain spaces.'
        required: true
        default: 'TestBuild'
    #   sha:
    #     description: 'sha of commit to build'
    #     required: true
    #     default: 6f55d08bbfe4d3baef2f8dd1cfafa077b39c5854

jobs:
  buildForLinuxBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repository: AndrewKahr/Private-Repo-To-Build
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v2
        with:
          path: Library
          key:
            Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-
            
      - uses: AndrewKahr/unity-builder@PrivateGitCredential
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          gitPrivateToken: ${{ secrets.ACCESS_TOKEN }}
          buildName: ${{ github.event.inputs.buildName }}
      
      - name: Set Git Short SHA
        run:  echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Set Current Build Time
        run: echo "BUILD_TIME=$(date "+%m-%d-%y_%H-%M-%S")" >> $GITHUB_ENV

      - uses: vimtor/action-zip@v1
        with:
          files: build/${{ matrix.targetPlatform }}/
          dest: ${{ github.event.inputs.buildName }}_${{ env.BUILD_TIME }}_${{ env.GITHUB_SHA_SHORT }}.zip

      - name: Upload to gdrive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.GC_TOKEN }}
          filename: "${{ github.event.inputs.buildName }}_${{ env.BUILD_TIME }}_${{ env.GITHUB_SHA_SHORT }}.zip"
          folderId: ${{ secrets.GD_FOLDER_ID }}


  # buildForWindowsBasedPlatforms:
  #   name: Build for ${{ matrix.targetPlatform }} on Windows
  #   runs-on: windows-2019
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       targetPlatform:
  #         - StandaloneWindows64 # Build a Windows 64-bit standalone.

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.ACCESS_TOKEN }}
  #         repository: AndrewKahr/Private-Repo-To-Build
  #         fetch-depth: 0
  #         lfs: true
          
  #     - uses: actions/cache@v2
  #       with:
  #         path: Library
  #         key:
  #           Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
  #         restore-keys: |
  #           Library-${{ matrix.targetPlatform }}-
  #           Library-
            
  #     - uses: AndrewKahr/unity-builder@PrivateGitCredential
  #       env:
  #         UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
  #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #       with:
  #         targetPlatform: ${{ matrix.targetPlatform }}
  #         gitPrivateToken: ${{ secrets.ACCESS_TOKEN }}
          
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: Build
  #         path: build

  # buildForMacOSBasedPlatforms:
  #   name: Build for ${{ matrix.targetPlatform }} on Mac
  #   runs-on: macos-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       targetPlatform:
  #         - StandaloneOSX # Build a macOS standalone.

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.ACCESS_TOKEN }}
  #         repository: AndrewKahr/Private-Repo-To-Build
  #         fetch-depth: 0
  #         lfs: true

  #     - uses: actions/cache@v2
  #       with:
  #         path: Library
  #         key:
  #           Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
  #         restore-keys: |
  #           Library-${{ matrix.targetPlatform }}-
  #           Library-

  #     - uses: AndrewKahr/unity-builder@PrivateGitCredential
  #       env:
  #         UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
  #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #       with:
  #         targetPlatform: ${{ matrix.targetPlatform }}
  #         gitPrivateToken: ${{ secrets.ACCESS_TOKEN }}

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: Build
  #         path: build
